# Generated by Django 5.2.5 on 2025-08-31 06:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('music', '0007_userrecommendationpreferences'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserExplorationProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_exploration_level', models.FloatField(default=0.5, help_text='Learned preferred exploration level (0-1)')),
                ('novelty_tolerance', models.FloatField(default=0.5, help_text='Tolerance for novel/unfamiliar content')),
                ('genre_flexibility', models.FloatField(default=0.5, help_text='Willingness to explore different genres')),
                ('total_feedbacks', models.IntegerField(default=0)),
                ('positive_feedbacks', models.IntegerField(default=0)),
                ('negative_feedbacks', models.IntegerField(default=0)),
                ('deepcut_acceptance_rate', models.FloatField(default=0.5)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='exploration_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'music_user_exploration_profile',
            },
        ),
        migrations.CreateModel(
            name='RecommendationFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike'), ('save', 'Save'), ('skip', 'Skip'), ('play', 'Play'), ('play_full', 'Play Full')], max_length=20)),
                ('feedback_value', models.FloatField(default=1.0, help_text='Feedback strength (e.g., play duration percentage)')),
                ('exploration_level', models.FloatField(blank=True, null=True)),
                ('recommendation_score', models.FloatField(blank=True, null=True)),
                ('position_in_list', models.IntegerField(blank=True, null=True)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('seed_track', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seed_feedbacks', to='music.track')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='music.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendation_feedbacks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'music_recommendation_feedback',
                'indexes': [models.Index(fields=['user', 'created_at'], name='music_recom_user_id_c5e7f7_idx'), models.Index(fields=['track', 'feedback_type'], name='music_recom_track_i_a6e4cd_idx'), models.Index(fields=['seed_track', 'user'], name='music_recom_seed_tr_afae11_idx')],
                'unique_together': {('user', 'track', 'seed_track', 'session_id')},
            },
        ),
    ]
